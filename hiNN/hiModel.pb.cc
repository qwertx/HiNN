// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: hiModel.proto

#include "hiModel.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
extern PROTOBUF_INTERNAL_EXPORT_hiModel_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_Snapshot_Block_hiModel_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_hiModel_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Snapshot_Block_Params_hiModel_2eproto;
namespace hi {
class Snapshot_Block_ParamsDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Snapshot_Block_Params> _instance;
} _Snapshot_Block_Params_default_instance_;
class Snapshot_BlockDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Snapshot_Block> _instance;
} _Snapshot_Block_default_instance_;
class SnapshotDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Snapshot> _instance;
} _Snapshot_default_instance_;
}  // namespace hi
static void InitDefaultsscc_info_Snapshot_hiModel_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::hi::_Snapshot_default_instance_;
    new (ptr) ::hi::Snapshot();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::hi::Snapshot::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_Snapshot_hiModel_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_Snapshot_hiModel_2eproto}, {
      &scc_info_Snapshot_Block_hiModel_2eproto.base,}};

static void InitDefaultsscc_info_Snapshot_Block_hiModel_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::hi::_Snapshot_Block_default_instance_;
    new (ptr) ::hi::Snapshot_Block();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::hi::Snapshot_Block::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_Snapshot_Block_hiModel_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_Snapshot_Block_hiModel_2eproto}, {
      &scc_info_Snapshot_Block_Params_hiModel_2eproto.base,}};

static void InitDefaultsscc_info_Snapshot_Block_Params_hiModel_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::hi::_Snapshot_Block_Params_default_instance_;
    new (ptr) ::hi::Snapshot_Block_Params();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::hi::Snapshot_Block_Params::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Snapshot_Block_Params_hiModel_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_Snapshot_Block_Params_hiModel_2eproto}, {}};

static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_hiModel_2eproto[3];
static constexpr ::PROTOBUF_NAMESPACE_ID::EnumDescriptor const** file_level_enum_descriptors_hiModel_2eproto = nullptr;
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_hiModel_2eproto = nullptr;

const ::PROTOBUF_NAMESPACE_ID::uint32 TableStruct_hiModel_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  PROTOBUF_FIELD_OFFSET(::hi::Snapshot_Block_Params, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::hi::Snapshot_Block_Params, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::hi::Snapshot_Block_Params, value_),
  0,
  PROTOBUF_FIELD_OFFSET(::hi::Snapshot_Block, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::hi::Snapshot_Block, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::hi::Snapshot_Block, layer_name_),
  PROTOBUF_FIELD_OFFSET(::hi::Snapshot_Block, param_type_),
  PROTOBUF_FIELD_OFFSET(::hi::Snapshot_Block, kernel_n_),
  PROTOBUF_FIELD_OFFSET(::hi::Snapshot_Block, kernel_c_),
  PROTOBUF_FIELD_OFFSET(::hi::Snapshot_Block, kernel_h_),
  PROTOBUF_FIELD_OFFSET(::hi::Snapshot_Block, kernel_w_),
  PROTOBUF_FIELD_OFFSET(::hi::Snapshot_Block, params_),
  0,
  1,
  2,
  3,
  4,
  5,
  ~0u,
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::hi::Snapshot, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::hi::Snapshot, block_),
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 6, sizeof(::hi::Snapshot_Block_Params)},
  { 7, 19, sizeof(::hi::Snapshot_Block)},
  { 26, -1, sizeof(::hi::Snapshot)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::hi::_Snapshot_Block_Params_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::hi::_Snapshot_Block_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::hi::_Snapshot_default_instance_),
};

const char descriptor_table_protodef_hiModel_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\rhiModel.proto\022\002hi\"\353\001\n\010Snapshot\022!\n\005bloc"
  "k\030\001 \003(\0132\022.hi.Snapshot.Block\032\273\001\n\005Block\022\022\n"
  "\nlayer_name\030\001 \002(\t\022\022\n\nparam_type\030\002 \002(\t\022\020\n"
  "\010kernel_n\030\003 \002(\005\022\020\n\010kernel_c\030\004 \002(\005\022\020\n\010ker"
  "nel_h\030\005 \002(\005\022\020\n\010kernel_w\030\006 \002(\005\022)\n\006params\030"
  "\007 \003(\0132\031.hi.Snapshot.Block.Params\032\027\n\006Para"
  "ms\022\r\n\005value\030\001 \002(\001"
  ;
static const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable*const descriptor_table_hiModel_2eproto_deps[1] = {
};
static ::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase*const descriptor_table_hiModel_2eproto_sccs[3] = {
  &scc_info_Snapshot_hiModel_2eproto.base,
  &scc_info_Snapshot_Block_hiModel_2eproto.base,
  &scc_info_Snapshot_Block_Params_hiModel_2eproto.base,
};
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_hiModel_2eproto_once;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_hiModel_2eproto = {
  false, false, descriptor_table_protodef_hiModel_2eproto, "hiModel.proto", 257,
  &descriptor_table_hiModel_2eproto_once, descriptor_table_hiModel_2eproto_sccs, descriptor_table_hiModel_2eproto_deps, 3, 0,
  schemas, file_default_instances, TableStruct_hiModel_2eproto::offsets,
  file_level_metadata_hiModel_2eproto, 3, file_level_enum_descriptors_hiModel_2eproto, file_level_service_descriptors_hiModel_2eproto,
};

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_hiModel_2eproto = (static_cast<void>(::PROTOBUF_NAMESPACE_ID::internal::AddDescriptors(&descriptor_table_hiModel_2eproto)), true);
namespace hi {

// ===================================================================

void Snapshot_Block_Params::InitAsDefaultInstance() {
}
class Snapshot_Block_Params::_Internal {
 public:
  using HasBits = decltype(std::declval<Snapshot_Block_Params>()._has_bits_);
  static void set_has_value(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static bool MissingRequiredFields(const HasBits& has_bits) {
    return ((has_bits[0] & 0x00000001) ^ 0x00000001) != 0;
  }
};

Snapshot_Block_Params::Snapshot_Block_Params(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:hi.Snapshot.Block.Params)
}
Snapshot_Block_Params::Snapshot_Block_Params(const Snapshot_Block_Params& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  value_ = from.value_;
  // @@protoc_insertion_point(copy_constructor:hi.Snapshot.Block.Params)
}

void Snapshot_Block_Params::SharedCtor() {
  value_ = 0;
}

Snapshot_Block_Params::~Snapshot_Block_Params() {
  // @@protoc_insertion_point(destructor:hi.Snapshot.Block.Params)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void Snapshot_Block_Params::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void Snapshot_Block_Params::ArenaDtor(void* object) {
  Snapshot_Block_Params* _this = reinterpret_cast< Snapshot_Block_Params* >(object);
  (void)_this;
}
void Snapshot_Block_Params::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void Snapshot_Block_Params::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Snapshot_Block_Params& Snapshot_Block_Params::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_Snapshot_Block_Params_hiModel_2eproto.base);
  return *internal_default_instance();
}


void Snapshot_Block_Params::Clear() {
// @@protoc_insertion_point(message_clear_start:hi.Snapshot.Block.Params)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  value_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Snapshot_Block_Params::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // required double value = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 9)) {
          _Internal::set_has_value(&has_bits);
          value_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<double>(ptr);
          ptr += sizeof(double);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Snapshot_Block_Params::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:hi.Snapshot.Block.Params)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required double value = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteDoubleToArray(1, this->_internal_value(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:hi.Snapshot.Block.Params)
  return target;
}

size_t Snapshot_Block_Params::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:hi.Snapshot.Block.Params)
  size_t total_size = 0;

  // required double value = 1;
  if (_internal_has_value()) {
    total_size += 1 + 8;
  }
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Snapshot_Block_Params::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:hi.Snapshot.Block.Params)
  GOOGLE_DCHECK_NE(&from, this);
  const Snapshot_Block_Params* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Snapshot_Block_Params>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:hi.Snapshot.Block.Params)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:hi.Snapshot.Block.Params)
    MergeFrom(*source);
  }
}

void Snapshot_Block_Params::MergeFrom(const Snapshot_Block_Params& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:hi.Snapshot.Block.Params)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_value()) {
    _internal_set_value(from._internal_value());
  }
}

void Snapshot_Block_Params::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:hi.Snapshot.Block.Params)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Snapshot_Block_Params::CopyFrom(const Snapshot_Block_Params& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:hi.Snapshot.Block.Params)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Snapshot_Block_Params::IsInitialized() const {
  if (_Internal::MissingRequiredFields(_has_bits_)) return false;
  return true;
}

void Snapshot_Block_Params::InternalSwap(Snapshot_Block_Params* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  swap(value_, other->value_);
}

::PROTOBUF_NAMESPACE_ID::Metadata Snapshot_Block_Params::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void Snapshot_Block::InitAsDefaultInstance() {
}
class Snapshot_Block::_Internal {
 public:
  using HasBits = decltype(std::declval<Snapshot_Block>()._has_bits_);
  static void set_has_layer_name(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_param_type(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_kernel_n(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static void set_has_kernel_c(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
  static void set_has_kernel_h(HasBits* has_bits) {
    (*has_bits)[0] |= 16u;
  }
  static void set_has_kernel_w(HasBits* has_bits) {
    (*has_bits)[0] |= 32u;
  }
  static bool MissingRequiredFields(const HasBits& has_bits) {
    return ((has_bits[0] & 0x0000003f) ^ 0x0000003f) != 0;
  }
};

Snapshot_Block::Snapshot_Block(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  params_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:hi.Snapshot.Block)
}
Snapshot_Block::Snapshot_Block(const Snapshot_Block& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_),
      params_(from.params_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  layer_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from._internal_has_layer_name()) {
    layer_name_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_layer_name(),
      GetArena());
  }
  param_type_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from._internal_has_param_type()) {
    param_type_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_param_type(),
      GetArena());
  }
  ::memcpy(&kernel_n_, &from.kernel_n_,
    static_cast<size_t>(reinterpret_cast<char*>(&kernel_w_) -
    reinterpret_cast<char*>(&kernel_n_)) + sizeof(kernel_w_));
  // @@protoc_insertion_point(copy_constructor:hi.Snapshot.Block)
}

void Snapshot_Block::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_Snapshot_Block_hiModel_2eproto.base);
  layer_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  param_type_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(&kernel_n_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&kernel_w_) -
      reinterpret_cast<char*>(&kernel_n_)) + sizeof(kernel_w_));
}

Snapshot_Block::~Snapshot_Block() {
  // @@protoc_insertion_point(destructor:hi.Snapshot.Block)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void Snapshot_Block::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  layer_name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  param_type_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void Snapshot_Block::ArenaDtor(void* object) {
  Snapshot_Block* _this = reinterpret_cast< Snapshot_Block* >(object);
  (void)_this;
}
void Snapshot_Block::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void Snapshot_Block::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Snapshot_Block& Snapshot_Block::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_Snapshot_Block_hiModel_2eproto.base);
  return *internal_default_instance();
}


void Snapshot_Block::Clear() {
// @@protoc_insertion_point(message_clear_start:hi.Snapshot.Block)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  params_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      layer_name_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000002u) {
      param_type_.ClearNonDefaultToEmpty();
    }
  }
  if (cached_has_bits & 0x0000003cu) {
    ::memset(&kernel_n_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&kernel_w_) -
        reinterpret_cast<char*>(&kernel_n_)) + sizeof(kernel_w_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Snapshot_Block::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // required string layer_name = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_layer_name();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          #ifndef NDEBUG
          ::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "hi.Snapshot.Block.layer_name");
          #endif  // !NDEBUG
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // required string param_type = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_param_type();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          #ifndef NDEBUG
          ::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "hi.Snapshot.Block.param_type");
          #endif  // !NDEBUG
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // required int32 kernel_n = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          _Internal::set_has_kernel_n(&has_bits);
          kernel_n_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // required int32 kernel_c = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 32)) {
          _Internal::set_has_kernel_c(&has_bits);
          kernel_c_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // required int32 kernel_h = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 40)) {
          _Internal::set_has_kernel_h(&has_bits);
          kernel_h_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // required int32 kernel_w = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 48)) {
          _Internal::set_has_kernel_w(&has_bits);
          kernel_w_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated .hi.Snapshot.Block.Params params = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 58)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_params(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<58>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Snapshot_Block::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:hi.Snapshot.Block)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string layer_name = 1;
  if (cached_has_bits & 0x00000001u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_internal_layer_name().data(), static_cast<int>(this->_internal_layer_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "hi.Snapshot.Block.layer_name");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_layer_name(), target);
  }

  // required string param_type = 2;
  if (cached_has_bits & 0x00000002u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_internal_param_type().data(), static_cast<int>(this->_internal_param_type().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "hi.Snapshot.Block.param_type");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_param_type(), target);
  }

  // required int32 kernel_n = 3;
  if (cached_has_bits & 0x00000004u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(3, this->_internal_kernel_n(), target);
  }

  // required int32 kernel_c = 4;
  if (cached_has_bits & 0x00000008u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(4, this->_internal_kernel_c(), target);
  }

  // required int32 kernel_h = 5;
  if (cached_has_bits & 0x00000010u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(5, this->_internal_kernel_h(), target);
  }

  // required int32 kernel_w = 6;
  if (cached_has_bits & 0x00000020u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(6, this->_internal_kernel_w(), target);
  }

  // repeated .hi.Snapshot.Block.Params params = 7;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_params_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(7, this->_internal_params(i), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:hi.Snapshot.Block)
  return target;
}

size_t Snapshot_Block::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:hi.Snapshot.Block)
  size_t total_size = 0;

  if (_internal_has_layer_name()) {
    // required string layer_name = 1;
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_layer_name());
  }

  if (_internal_has_param_type()) {
    // required string param_type = 2;
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_param_type());
  }

  if (_internal_has_kernel_n()) {
    // required int32 kernel_n = 3;
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_kernel_n());
  }

  if (_internal_has_kernel_c()) {
    // required int32 kernel_c = 4;
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_kernel_c());
  }

  if (_internal_has_kernel_h()) {
    // required int32 kernel_h = 5;
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_kernel_h());
  }

  if (_internal_has_kernel_w()) {
    // required int32 kernel_w = 6;
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_kernel_w());
  }

  return total_size;
}
size_t Snapshot_Block::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:hi.Snapshot.Block)
  size_t total_size = 0;

  if (((_has_bits_[0] & 0x0000003f) ^ 0x0000003f) == 0) {  // All required fields are present.
    // required string layer_name = 1;
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_layer_name());

    // required string param_type = 2;
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_param_type());

    // required int32 kernel_n = 3;
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_kernel_n());

    // required int32 kernel_c = 4;
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_kernel_c());

    // required int32 kernel_h = 5;
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_kernel_h());

    // required int32 kernel_w = 6;
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_kernel_w());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .hi.Snapshot.Block.Params params = 7;
  total_size += 1UL * this->_internal_params_size();
  for (const auto& msg : this->params_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Snapshot_Block::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:hi.Snapshot.Block)
  GOOGLE_DCHECK_NE(&from, this);
  const Snapshot_Block* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Snapshot_Block>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:hi.Snapshot.Block)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:hi.Snapshot.Block)
    MergeFrom(*source);
  }
}

void Snapshot_Block::MergeFrom(const Snapshot_Block& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:hi.Snapshot.Block)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  params_.MergeFrom(from.params_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x0000003fu) {
    if (cached_has_bits & 0x00000001u) {
      _internal_set_layer_name(from._internal_layer_name());
    }
    if (cached_has_bits & 0x00000002u) {
      _internal_set_param_type(from._internal_param_type());
    }
    if (cached_has_bits & 0x00000004u) {
      kernel_n_ = from.kernel_n_;
    }
    if (cached_has_bits & 0x00000008u) {
      kernel_c_ = from.kernel_c_;
    }
    if (cached_has_bits & 0x00000010u) {
      kernel_h_ = from.kernel_h_;
    }
    if (cached_has_bits & 0x00000020u) {
      kernel_w_ = from.kernel_w_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void Snapshot_Block::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:hi.Snapshot.Block)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Snapshot_Block::CopyFrom(const Snapshot_Block& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:hi.Snapshot.Block)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Snapshot_Block::IsInitialized() const {
  if (_Internal::MissingRequiredFields(_has_bits_)) return false;
  if (!::PROTOBUF_NAMESPACE_ID::internal::AllAreInitialized(params_)) return false;
  return true;
}

void Snapshot_Block::InternalSwap(Snapshot_Block* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  params_.InternalSwap(&other->params_);
  layer_name_.Swap(&other->layer_name_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  param_type_.Swap(&other->param_type_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Snapshot_Block, kernel_w_)
      + sizeof(Snapshot_Block::kernel_w_)
      - PROTOBUF_FIELD_OFFSET(Snapshot_Block, kernel_n_)>(
          reinterpret_cast<char*>(&kernel_n_),
          reinterpret_cast<char*>(&other->kernel_n_));
}

::PROTOBUF_NAMESPACE_ID::Metadata Snapshot_Block::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void Snapshot::InitAsDefaultInstance() {
}
class Snapshot::_Internal {
 public:
};

Snapshot::Snapshot(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  block_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:hi.Snapshot)
}
Snapshot::Snapshot(const Snapshot& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      block_(from.block_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:hi.Snapshot)
}

void Snapshot::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_Snapshot_hiModel_2eproto.base);
}

Snapshot::~Snapshot() {
  // @@protoc_insertion_point(destructor:hi.Snapshot)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void Snapshot::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void Snapshot::ArenaDtor(void* object) {
  Snapshot* _this = reinterpret_cast< Snapshot* >(object);
  (void)_this;
}
void Snapshot::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void Snapshot::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Snapshot& Snapshot::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_Snapshot_hiModel_2eproto.base);
  return *internal_default_instance();
}


void Snapshot::Clear() {
// @@protoc_insertion_point(message_clear_start:hi.Snapshot)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  block_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Snapshot::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // repeated .hi.Snapshot.Block block = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_block(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Snapshot::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:hi.Snapshot)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .hi.Snapshot.Block block = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_block_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, this->_internal_block(i), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:hi.Snapshot)
  return target;
}

size_t Snapshot::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:hi.Snapshot)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .hi.Snapshot.Block block = 1;
  total_size += 1UL * this->_internal_block_size();
  for (const auto& msg : this->block_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Snapshot::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:hi.Snapshot)
  GOOGLE_DCHECK_NE(&from, this);
  const Snapshot* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Snapshot>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:hi.Snapshot)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:hi.Snapshot)
    MergeFrom(*source);
  }
}

void Snapshot::MergeFrom(const Snapshot& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:hi.Snapshot)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  block_.MergeFrom(from.block_);
}

void Snapshot::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:hi.Snapshot)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Snapshot::CopyFrom(const Snapshot& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:hi.Snapshot)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Snapshot::IsInitialized() const {
  if (!::PROTOBUF_NAMESPACE_ID::internal::AllAreInitialized(block_)) return false;
  return true;
}

void Snapshot::InternalSwap(Snapshot* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  block_.InternalSwap(&other->block_);
}

::PROTOBUF_NAMESPACE_ID::Metadata Snapshot::GetMetadata() const {
  return GetMetadataStatic();
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace hi
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::hi::Snapshot_Block_Params* Arena::CreateMaybeMessage< ::hi::Snapshot_Block_Params >(Arena* arena) {
  return Arena::CreateMessageInternal< ::hi::Snapshot_Block_Params >(arena);
}
template<> PROTOBUF_NOINLINE ::hi::Snapshot_Block* Arena::CreateMaybeMessage< ::hi::Snapshot_Block >(Arena* arena) {
  return Arena::CreateMessageInternal< ::hi::Snapshot_Block >(arena);
}
template<> PROTOBUF_NOINLINE ::hi::Snapshot* Arena::CreateMaybeMessage< ::hi::Snapshot >(Arena* arena) {
  return Arena::CreateMessageInternal< ::hi::Snapshot >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
