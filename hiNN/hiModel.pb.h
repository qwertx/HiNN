// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: hiModel.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_hiModel_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_hiModel_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3012000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3012000 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata_lite.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_hiModel_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_hiModel_2eproto {
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::AuxillaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTable schema[3]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::FieldMetadata field_metadata[];
  static const ::PROTOBUF_NAMESPACE_ID::internal::SerializationTable serialization_table[];
  static const ::PROTOBUF_NAMESPACE_ID::uint32 offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_hiModel_2eproto;
namespace hi {
class Snapshot;
class SnapshotDefaultTypeInternal;
extern SnapshotDefaultTypeInternal _Snapshot_default_instance_;
class Snapshot_Block;
class Snapshot_BlockDefaultTypeInternal;
extern Snapshot_BlockDefaultTypeInternal _Snapshot_Block_default_instance_;
class Snapshot_Block_Params;
class Snapshot_Block_ParamsDefaultTypeInternal;
extern Snapshot_Block_ParamsDefaultTypeInternal _Snapshot_Block_Params_default_instance_;
}  // namespace hi
PROTOBUF_NAMESPACE_OPEN
template<> ::hi::Snapshot* Arena::CreateMaybeMessage<::hi::Snapshot>(Arena*);
template<> ::hi::Snapshot_Block* Arena::CreateMaybeMessage<::hi::Snapshot_Block>(Arena*);
template<> ::hi::Snapshot_Block_Params* Arena::CreateMaybeMessage<::hi::Snapshot_Block_Params>(Arena*);
PROTOBUF_NAMESPACE_CLOSE
namespace hi {

// ===================================================================

class Snapshot_Block_Params PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:hi.Snapshot.Block.Params) */ {
 public:
  inline Snapshot_Block_Params() : Snapshot_Block_Params(nullptr) {};
  virtual ~Snapshot_Block_Params();

  Snapshot_Block_Params(const Snapshot_Block_Params& from);
  Snapshot_Block_Params(Snapshot_Block_Params&& from) noexcept
    : Snapshot_Block_Params() {
    *this = ::std::move(from);
  }

  inline Snapshot_Block_Params& operator=(const Snapshot_Block_Params& from) {
    CopyFrom(from);
    return *this;
  }
  inline Snapshot_Block_Params& operator=(Snapshot_Block_Params&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const Snapshot_Block_Params& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Snapshot_Block_Params* internal_default_instance() {
    return reinterpret_cast<const Snapshot_Block_Params*>(
               &_Snapshot_Block_Params_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(Snapshot_Block_Params& a, Snapshot_Block_Params& b) {
    a.Swap(&b);
  }
  inline void Swap(Snapshot_Block_Params* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Snapshot_Block_Params* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline Snapshot_Block_Params* New() const final {
    return CreateMaybeMessage<Snapshot_Block_Params>(nullptr);
  }

  Snapshot_Block_Params* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<Snapshot_Block_Params>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const Snapshot_Block_Params& from);
  void MergeFrom(const Snapshot_Block_Params& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Snapshot_Block_Params* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "hi.Snapshot.Block.Params";
  }
  protected:
  explicit Snapshot_Block_Params(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_hiModel_2eproto);
    return ::descriptor_table_hiModel_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kValueFieldNumber = 1,
  };
  // required double value = 1;
  bool has_value() const;
  private:
  bool _internal_has_value() const;
  public:
  void clear_value();
  double value() const;
  void set_value(double value);
  private:
  double _internal_value() const;
  void _internal_set_value(double value);
  public:

  // @@protoc_insertion_point(class_scope:hi.Snapshot.Block.Params)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  double value_;
  friend struct ::TableStruct_hiModel_2eproto;
};
// -------------------------------------------------------------------

class Snapshot_Block PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:hi.Snapshot.Block) */ {
 public:
  inline Snapshot_Block() : Snapshot_Block(nullptr) {};
  virtual ~Snapshot_Block();

  Snapshot_Block(const Snapshot_Block& from);
  Snapshot_Block(Snapshot_Block&& from) noexcept
    : Snapshot_Block() {
    *this = ::std::move(from);
  }

  inline Snapshot_Block& operator=(const Snapshot_Block& from) {
    CopyFrom(from);
    return *this;
  }
  inline Snapshot_Block& operator=(Snapshot_Block&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const Snapshot_Block& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Snapshot_Block* internal_default_instance() {
    return reinterpret_cast<const Snapshot_Block*>(
               &_Snapshot_Block_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(Snapshot_Block& a, Snapshot_Block& b) {
    a.Swap(&b);
  }
  inline void Swap(Snapshot_Block* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Snapshot_Block* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline Snapshot_Block* New() const final {
    return CreateMaybeMessage<Snapshot_Block>(nullptr);
  }

  Snapshot_Block* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<Snapshot_Block>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const Snapshot_Block& from);
  void MergeFrom(const Snapshot_Block& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Snapshot_Block* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "hi.Snapshot.Block";
  }
  protected:
  explicit Snapshot_Block(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_hiModel_2eproto);
    return ::descriptor_table_hiModel_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  typedef Snapshot_Block_Params Params;

  // accessors -------------------------------------------------------

  enum : int {
    kParamsFieldNumber = 7,
    kLayerNameFieldNumber = 1,
    kParamTypeFieldNumber = 2,
    kKernelNFieldNumber = 3,
    kKernelCFieldNumber = 4,
    kKernelHFieldNumber = 5,
    kKernelWFieldNumber = 6,
  };
  // repeated .hi.Snapshot.Block.Params params = 7;
  int params_size() const;
  private:
  int _internal_params_size() const;
  public:
  void clear_params();
  ::hi::Snapshot_Block_Params* mutable_params(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::hi::Snapshot_Block_Params >*
      mutable_params();
  private:
  const ::hi::Snapshot_Block_Params& _internal_params(int index) const;
  ::hi::Snapshot_Block_Params* _internal_add_params();
  public:
  const ::hi::Snapshot_Block_Params& params(int index) const;
  ::hi::Snapshot_Block_Params* add_params();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::hi::Snapshot_Block_Params >&
      params() const;

  // required string layer_name = 1;
  bool has_layer_name() const;
  private:
  bool _internal_has_layer_name() const;
  public:
  void clear_layer_name();
  const std::string& layer_name() const;
  void set_layer_name(const std::string& value);
  void set_layer_name(std::string&& value);
  void set_layer_name(const char* value);
  void set_layer_name(const char* value, size_t size);
  std::string* mutable_layer_name();
  std::string* release_layer_name();
  void set_allocated_layer_name(std::string* layer_name);
  GOOGLE_PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  std::string* unsafe_arena_release_layer_name();
  GOOGLE_PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_layer_name(
      std::string* layer_name);
  private:
  const std::string& _internal_layer_name() const;
  void _internal_set_layer_name(const std::string& value);
  std::string* _internal_mutable_layer_name();
  public:

  // required string param_type = 2;
  bool has_param_type() const;
  private:
  bool _internal_has_param_type() const;
  public:
  void clear_param_type();
  const std::string& param_type() const;
  void set_param_type(const std::string& value);
  void set_param_type(std::string&& value);
  void set_param_type(const char* value);
  void set_param_type(const char* value, size_t size);
  std::string* mutable_param_type();
  std::string* release_param_type();
  void set_allocated_param_type(std::string* param_type);
  GOOGLE_PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  std::string* unsafe_arena_release_param_type();
  GOOGLE_PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_param_type(
      std::string* param_type);
  private:
  const std::string& _internal_param_type() const;
  void _internal_set_param_type(const std::string& value);
  std::string* _internal_mutable_param_type();
  public:

  // required int32 kernel_n = 3;
  bool has_kernel_n() const;
  private:
  bool _internal_has_kernel_n() const;
  public:
  void clear_kernel_n();
  ::PROTOBUF_NAMESPACE_ID::int32 kernel_n() const;
  void set_kernel_n(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_kernel_n() const;
  void _internal_set_kernel_n(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // required int32 kernel_c = 4;
  bool has_kernel_c() const;
  private:
  bool _internal_has_kernel_c() const;
  public:
  void clear_kernel_c();
  ::PROTOBUF_NAMESPACE_ID::int32 kernel_c() const;
  void set_kernel_c(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_kernel_c() const;
  void _internal_set_kernel_c(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // required int32 kernel_h = 5;
  bool has_kernel_h() const;
  private:
  bool _internal_has_kernel_h() const;
  public:
  void clear_kernel_h();
  ::PROTOBUF_NAMESPACE_ID::int32 kernel_h() const;
  void set_kernel_h(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_kernel_h() const;
  void _internal_set_kernel_h(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // required int32 kernel_w = 6;
  bool has_kernel_w() const;
  private:
  bool _internal_has_kernel_w() const;
  public:
  void clear_kernel_w();
  ::PROTOBUF_NAMESPACE_ID::int32 kernel_w() const;
  void set_kernel_w(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_kernel_w() const;
  void _internal_set_kernel_w(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:hi.Snapshot.Block)
 private:
  class _Internal;

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::hi::Snapshot_Block_Params > params_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr layer_name_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr param_type_;
  ::PROTOBUF_NAMESPACE_ID::int32 kernel_n_;
  ::PROTOBUF_NAMESPACE_ID::int32 kernel_c_;
  ::PROTOBUF_NAMESPACE_ID::int32 kernel_h_;
  ::PROTOBUF_NAMESPACE_ID::int32 kernel_w_;
  friend struct ::TableStruct_hiModel_2eproto;
};
// -------------------------------------------------------------------

class Snapshot PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:hi.Snapshot) */ {
 public:
  inline Snapshot() : Snapshot(nullptr) {};
  virtual ~Snapshot();

  Snapshot(const Snapshot& from);
  Snapshot(Snapshot&& from) noexcept
    : Snapshot() {
    *this = ::std::move(from);
  }

  inline Snapshot& operator=(const Snapshot& from) {
    CopyFrom(from);
    return *this;
  }
  inline Snapshot& operator=(Snapshot&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const Snapshot& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Snapshot* internal_default_instance() {
    return reinterpret_cast<const Snapshot*>(
               &_Snapshot_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  friend void swap(Snapshot& a, Snapshot& b) {
    a.Swap(&b);
  }
  inline void Swap(Snapshot* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Snapshot* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline Snapshot* New() const final {
    return CreateMaybeMessage<Snapshot>(nullptr);
  }

  Snapshot* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<Snapshot>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const Snapshot& from);
  void MergeFrom(const Snapshot& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Snapshot* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "hi.Snapshot";
  }
  protected:
  explicit Snapshot(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_hiModel_2eproto);
    return ::descriptor_table_hiModel_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  typedef Snapshot_Block Block;

  // accessors -------------------------------------------------------

  enum : int {
    kBlockFieldNumber = 1,
  };
  // repeated .hi.Snapshot.Block block = 1;
  int block_size() const;
  private:
  int _internal_block_size() const;
  public:
  void clear_block();
  ::hi::Snapshot_Block* mutable_block(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::hi::Snapshot_Block >*
      mutable_block();
  private:
  const ::hi::Snapshot_Block& _internal_block(int index) const;
  ::hi::Snapshot_Block* _internal_add_block();
  public:
  const ::hi::Snapshot_Block& block(int index) const;
  ::hi::Snapshot_Block* add_block();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::hi::Snapshot_Block >&
      block() const;

  // @@protoc_insertion_point(class_scope:hi.Snapshot)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::hi::Snapshot_Block > block_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_hiModel_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// Snapshot_Block_Params

// required double value = 1;
inline bool Snapshot_Block_Params::_internal_has_value() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool Snapshot_Block_Params::has_value() const {
  return _internal_has_value();
}
inline void Snapshot_Block_Params::clear_value() {
  value_ = 0;
  _has_bits_[0] &= ~0x00000001u;
}
inline double Snapshot_Block_Params::_internal_value() const {
  return value_;
}
inline double Snapshot_Block_Params::value() const {
  // @@protoc_insertion_point(field_get:hi.Snapshot.Block.Params.value)
  return _internal_value();
}
inline void Snapshot_Block_Params::_internal_set_value(double value) {
  _has_bits_[0] |= 0x00000001u;
  value_ = value;
}
inline void Snapshot_Block_Params::set_value(double value) {
  _internal_set_value(value);
  // @@protoc_insertion_point(field_set:hi.Snapshot.Block.Params.value)
}

// -------------------------------------------------------------------

// Snapshot_Block

// required string layer_name = 1;
inline bool Snapshot_Block::_internal_has_layer_name() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool Snapshot_Block::has_layer_name() const {
  return _internal_has_layer_name();
}
inline void Snapshot_Block::clear_layer_name() {
  layer_name_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  _has_bits_[0] &= ~0x00000001u;
}
inline const std::string& Snapshot_Block::layer_name() const {
  // @@protoc_insertion_point(field_get:hi.Snapshot.Block.layer_name)
  return _internal_layer_name();
}
inline void Snapshot_Block::set_layer_name(const std::string& value) {
  _internal_set_layer_name(value);
  // @@protoc_insertion_point(field_set:hi.Snapshot.Block.layer_name)
}
inline std::string* Snapshot_Block::mutable_layer_name() {
  // @@protoc_insertion_point(field_mutable:hi.Snapshot.Block.layer_name)
  return _internal_mutable_layer_name();
}
inline const std::string& Snapshot_Block::_internal_layer_name() const {
  return layer_name_.Get();
}
inline void Snapshot_Block::_internal_set_layer_name(const std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  layer_name_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value, GetArena());
}
inline void Snapshot_Block::set_layer_name(std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  layer_name_.Set(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:hi.Snapshot.Block.layer_name)
}
inline void Snapshot_Block::set_layer_name(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  layer_name_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArena());
  // @@protoc_insertion_point(field_set_char:hi.Snapshot.Block.layer_name)
}
inline void Snapshot_Block::set_layer_name(const char* value,
    size_t size) {
  _has_bits_[0] |= 0x00000001u;
  layer_name_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:hi.Snapshot.Block.layer_name)
}
inline std::string* Snapshot_Block::_internal_mutable_layer_name() {
  _has_bits_[0] |= 0x00000001u;
  return layer_name_.Mutable(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline std::string* Snapshot_Block::release_layer_name() {
  // @@protoc_insertion_point(field_release:hi.Snapshot.Block.layer_name)
  if (!_internal_has_layer_name()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return layer_name_.ReleaseNonDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void Snapshot_Block::set_allocated_layer_name(std::string* layer_name) {
  if (layer_name != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  layer_name_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), layer_name,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:hi.Snapshot.Block.layer_name)
}
inline std::string* Snapshot_Block::unsafe_arena_release_layer_name() {
  // @@protoc_insertion_point(field_unsafe_arena_release:hi.Snapshot.Block.layer_name)
  GOOGLE_DCHECK(GetArena() != nullptr);
  _has_bits_[0] &= ~0x00000001u;
  return layer_name_.UnsafeArenaRelease(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      GetArena());
}
inline void Snapshot_Block::unsafe_arena_set_allocated_layer_name(
    std::string* layer_name) {
  GOOGLE_DCHECK(GetArena() != nullptr);
  if (layer_name != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  layer_name_.UnsafeArenaSetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      layer_name, GetArena());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:hi.Snapshot.Block.layer_name)
}

// required string param_type = 2;
inline bool Snapshot_Block::_internal_has_param_type() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool Snapshot_Block::has_param_type() const {
  return _internal_has_param_type();
}
inline void Snapshot_Block::clear_param_type() {
  param_type_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  _has_bits_[0] &= ~0x00000002u;
}
inline const std::string& Snapshot_Block::param_type() const {
  // @@protoc_insertion_point(field_get:hi.Snapshot.Block.param_type)
  return _internal_param_type();
}
inline void Snapshot_Block::set_param_type(const std::string& value) {
  _internal_set_param_type(value);
  // @@protoc_insertion_point(field_set:hi.Snapshot.Block.param_type)
}
inline std::string* Snapshot_Block::mutable_param_type() {
  // @@protoc_insertion_point(field_mutable:hi.Snapshot.Block.param_type)
  return _internal_mutable_param_type();
}
inline const std::string& Snapshot_Block::_internal_param_type() const {
  return param_type_.Get();
}
inline void Snapshot_Block::_internal_set_param_type(const std::string& value) {
  _has_bits_[0] |= 0x00000002u;
  param_type_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value, GetArena());
}
inline void Snapshot_Block::set_param_type(std::string&& value) {
  _has_bits_[0] |= 0x00000002u;
  param_type_.Set(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:hi.Snapshot.Block.param_type)
}
inline void Snapshot_Block::set_param_type(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000002u;
  param_type_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArena());
  // @@protoc_insertion_point(field_set_char:hi.Snapshot.Block.param_type)
}
inline void Snapshot_Block::set_param_type(const char* value,
    size_t size) {
  _has_bits_[0] |= 0x00000002u;
  param_type_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:hi.Snapshot.Block.param_type)
}
inline std::string* Snapshot_Block::_internal_mutable_param_type() {
  _has_bits_[0] |= 0x00000002u;
  return param_type_.Mutable(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline std::string* Snapshot_Block::release_param_type() {
  // @@protoc_insertion_point(field_release:hi.Snapshot.Block.param_type)
  if (!_internal_has_param_type()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000002u;
  return param_type_.ReleaseNonDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void Snapshot_Block::set_allocated_param_type(std::string* param_type) {
  if (param_type != nullptr) {
    _has_bits_[0] |= 0x00000002u;
  } else {
    _has_bits_[0] &= ~0x00000002u;
  }
  param_type_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), param_type,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:hi.Snapshot.Block.param_type)
}
inline std::string* Snapshot_Block::unsafe_arena_release_param_type() {
  // @@protoc_insertion_point(field_unsafe_arena_release:hi.Snapshot.Block.param_type)
  GOOGLE_DCHECK(GetArena() != nullptr);
  _has_bits_[0] &= ~0x00000002u;
  return param_type_.UnsafeArenaRelease(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      GetArena());
}
inline void Snapshot_Block::unsafe_arena_set_allocated_param_type(
    std::string* param_type) {
  GOOGLE_DCHECK(GetArena() != nullptr);
  if (param_type != nullptr) {
    _has_bits_[0] |= 0x00000002u;
  } else {
    _has_bits_[0] &= ~0x00000002u;
  }
  param_type_.UnsafeArenaSetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      param_type, GetArena());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:hi.Snapshot.Block.param_type)
}

// required int32 kernel_n = 3;
inline bool Snapshot_Block::_internal_has_kernel_n() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool Snapshot_Block::has_kernel_n() const {
  return _internal_has_kernel_n();
}
inline void Snapshot_Block::clear_kernel_n() {
  kernel_n_ = 0;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 Snapshot_Block::_internal_kernel_n() const {
  return kernel_n_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 Snapshot_Block::kernel_n() const {
  // @@protoc_insertion_point(field_get:hi.Snapshot.Block.kernel_n)
  return _internal_kernel_n();
}
inline void Snapshot_Block::_internal_set_kernel_n(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000004u;
  kernel_n_ = value;
}
inline void Snapshot_Block::set_kernel_n(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_kernel_n(value);
  // @@protoc_insertion_point(field_set:hi.Snapshot.Block.kernel_n)
}

// required int32 kernel_c = 4;
inline bool Snapshot_Block::_internal_has_kernel_c() const {
  bool value = (_has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline bool Snapshot_Block::has_kernel_c() const {
  return _internal_has_kernel_c();
}
inline void Snapshot_Block::clear_kernel_c() {
  kernel_c_ = 0;
  _has_bits_[0] &= ~0x00000008u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 Snapshot_Block::_internal_kernel_c() const {
  return kernel_c_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 Snapshot_Block::kernel_c() const {
  // @@protoc_insertion_point(field_get:hi.Snapshot.Block.kernel_c)
  return _internal_kernel_c();
}
inline void Snapshot_Block::_internal_set_kernel_c(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000008u;
  kernel_c_ = value;
}
inline void Snapshot_Block::set_kernel_c(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_kernel_c(value);
  // @@protoc_insertion_point(field_set:hi.Snapshot.Block.kernel_c)
}

// required int32 kernel_h = 5;
inline bool Snapshot_Block::_internal_has_kernel_h() const {
  bool value = (_has_bits_[0] & 0x00000010u) != 0;
  return value;
}
inline bool Snapshot_Block::has_kernel_h() const {
  return _internal_has_kernel_h();
}
inline void Snapshot_Block::clear_kernel_h() {
  kernel_h_ = 0;
  _has_bits_[0] &= ~0x00000010u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 Snapshot_Block::_internal_kernel_h() const {
  return kernel_h_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 Snapshot_Block::kernel_h() const {
  // @@protoc_insertion_point(field_get:hi.Snapshot.Block.kernel_h)
  return _internal_kernel_h();
}
inline void Snapshot_Block::_internal_set_kernel_h(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000010u;
  kernel_h_ = value;
}
inline void Snapshot_Block::set_kernel_h(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_kernel_h(value);
  // @@protoc_insertion_point(field_set:hi.Snapshot.Block.kernel_h)
}

// required int32 kernel_w = 6;
inline bool Snapshot_Block::_internal_has_kernel_w() const {
  bool value = (_has_bits_[0] & 0x00000020u) != 0;
  return value;
}
inline bool Snapshot_Block::has_kernel_w() const {
  return _internal_has_kernel_w();
}
inline void Snapshot_Block::clear_kernel_w() {
  kernel_w_ = 0;
  _has_bits_[0] &= ~0x00000020u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 Snapshot_Block::_internal_kernel_w() const {
  return kernel_w_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 Snapshot_Block::kernel_w() const {
  // @@protoc_insertion_point(field_get:hi.Snapshot.Block.kernel_w)
  return _internal_kernel_w();
}
inline void Snapshot_Block::_internal_set_kernel_w(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000020u;
  kernel_w_ = value;
}
inline void Snapshot_Block::set_kernel_w(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_kernel_w(value);
  // @@protoc_insertion_point(field_set:hi.Snapshot.Block.kernel_w)
}

// repeated .hi.Snapshot.Block.Params params = 7;
inline int Snapshot_Block::_internal_params_size() const {
  return params_.size();
}
inline int Snapshot_Block::params_size() const {
  return _internal_params_size();
}
inline void Snapshot_Block::clear_params() {
  params_.Clear();
}
inline ::hi::Snapshot_Block_Params* Snapshot_Block::mutable_params(int index) {
  // @@protoc_insertion_point(field_mutable:hi.Snapshot.Block.params)
  return params_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::hi::Snapshot_Block_Params >*
Snapshot_Block::mutable_params() {
  // @@protoc_insertion_point(field_mutable_list:hi.Snapshot.Block.params)
  return &params_;
}
inline const ::hi::Snapshot_Block_Params& Snapshot_Block::_internal_params(int index) const {
  return params_.Get(index);
}
inline const ::hi::Snapshot_Block_Params& Snapshot_Block::params(int index) const {
  // @@protoc_insertion_point(field_get:hi.Snapshot.Block.params)
  return _internal_params(index);
}
inline ::hi::Snapshot_Block_Params* Snapshot_Block::_internal_add_params() {
  return params_.Add();
}
inline ::hi::Snapshot_Block_Params* Snapshot_Block::add_params() {
  // @@protoc_insertion_point(field_add:hi.Snapshot.Block.params)
  return _internal_add_params();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::hi::Snapshot_Block_Params >&
Snapshot_Block::params() const {
  // @@protoc_insertion_point(field_list:hi.Snapshot.Block.params)
  return params_;
}

// -------------------------------------------------------------------

// Snapshot

// repeated .hi.Snapshot.Block block = 1;
inline int Snapshot::_internal_block_size() const {
  return block_.size();
}
inline int Snapshot::block_size() const {
  return _internal_block_size();
}
inline void Snapshot::clear_block() {
  block_.Clear();
}
inline ::hi::Snapshot_Block* Snapshot::mutable_block(int index) {
  // @@protoc_insertion_point(field_mutable:hi.Snapshot.block)
  return block_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::hi::Snapshot_Block >*
Snapshot::mutable_block() {
  // @@protoc_insertion_point(field_mutable_list:hi.Snapshot.block)
  return &block_;
}
inline const ::hi::Snapshot_Block& Snapshot::_internal_block(int index) const {
  return block_.Get(index);
}
inline const ::hi::Snapshot_Block& Snapshot::block(int index) const {
  // @@protoc_insertion_point(field_get:hi.Snapshot.block)
  return _internal_block(index);
}
inline ::hi::Snapshot_Block* Snapshot::_internal_add_block() {
  return block_.Add();
}
inline ::hi::Snapshot_Block* Snapshot::add_block() {
  // @@protoc_insertion_point(field_add:hi.Snapshot.block)
  return _internal_add_block();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::hi::Snapshot_Block >&
Snapshot::block() const {
  // @@protoc_insertion_point(field_list:hi.Snapshot.block)
  return block_;
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace hi

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_hiModel_2eproto
